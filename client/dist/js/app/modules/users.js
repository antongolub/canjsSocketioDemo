define("text!templates/user/user.hbs",[],function(){return'<section id="user" class="b-section">\n    <form>\n        <p>\n            <label>\n                <input type="text" name="name" can-value="name" placeholder="Full name"/>\n                <span class="error" data-error="name"></span>\n            </label>\n        </p>\n        <p>\n            <label>\n                <input type="email" name="email" can-value="email" placeholder="Email"/>\n                <span class="error" data-error="email"></span>\n            </label>\n        </p>\n        <button id="add">Add</button>\n        <button id="save">Save</button>\n        <button id="remove">Remove</button>\n    </form>\n    <div class="controlError"></div>\n</section>\n'}),define("models/defaultModel",["can","socket"],function(e,t){return function(n,r){var o;return"string"==typeof n?(o=e.Model.extend(r,{create:function(r){var o=e.Deferred(),s=this;return t.emit(n+"::create",$.extend({},s._data,r),{},function(e,t){s.attr(t),o.resolve(t)}),o},findOne:function(r,o){var s=e.Deferred(),i=this;return t.emit(n+"::get",r,o,function(e,t){i.attr(t),s.resolve(t)}),s},findAll:function(r){var o=e.Deferred(),s=this;return t.emit(n+"::find",r,function(e,t){s.attr("list",t),o.resolve(t)}),o},update:function(r,o){var s=e.Deferred(),i=this;return t.emit(n+"::update",r||i._data.id,$.extend({},i._data,o),{},function(e,t){i.attr(t),s.resolve(t)}),s},destroy:function(r){var o=e.Deferred(),s=this;return t.emit(n+"::remove",r||s._data.id,{},function(e,t){o.resolve(t)}),o}}),t.on(n+" updated",function(t){e.trigger(o,"updated",t)}),t.on(n+" created",function(t){e.trigger(o,"created",t)}),t.on(n+" removed",function(t){e.trigger(o,"destroyed",t)})):o=e.Model,o}}),define("models/userModel",["models/defaultModel"],function(e){return e("api/users",{attributes:{name:"string",email:"string",id:"number"},init:function(){this.validate("email",function(e){return e&&e.length?/^([a-zA-Z0-9_.+\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(e)?null:"correct email required":"email required"}),this.validate("name",function(e){return e&&e.length?null:"name required"})}})}),define("assets/pushstate",[],function(){return window.history?function(e,t,n){window.history[n?"replaceState":"pushState"]({},t||"",e)}:function(e,t){document.location=e,document.title=t||""}}),define("controls/user/userControl",["can","controls/defaultControl","text!templates/user/user.hbs","models/userModel","assets/pushstate"],function(e,t,n,r,o){var s="b-section--error",i="b-section--new";return t.extend({init:function(){var t=this;e.view.mustache("userHbs",n),e.view("userHbs",t.model,function(e){t.element=t.element.append(e).find("#user"),t.$formElements=t.element.find("input, select, textarea"),t.$error=t.element.find(".controlError"),t.element.on("click","#save, #add",$.proxy(t.save,t)),t.element.on("click","#remove",$.proxy(t.remove,t))}),t.model.bind("change",$.proxy(t.onModelChange,t))},model:new r,fetch:function(e){var t,n=this;return n.id=(e||{}).id,n.id&&(t=n.model.findOne(e.id).done($.proxy(n.onModelUpdate,n))),t},save:function(){var e,t=this;return t.$formElements.trigger("change"),e=t.model.errors(),e?e:t.model.update().done($.proxy(t.onModelSave,t))},remove:function(){var e=this;return o("/users","Users",!0),e.model.destroy()},toggleViewMode:function(e){var t,n=this,r="new"===n.id;n.element.toggleClass(i,r),r?(n.model.attr("id",null),n.$formElements.val(""),n.id=null):e||(t="User {id:"+n.id+"} not found",n.$error.html(t)),n.element.toggleClass(s,!!t)},onModelChange:function(e,t){return this.showError(t)},onModelSave:function(t){e.route.attr("id",t.id),this.element.removeClass(i)},onModelUpdate:function(e){this.toggleViewMode(e)},show:function(e){var t=this;t.element.show(),t.fetch(e)}})}),define("text!templates/user/userlist.hbs",[],function(){return'\n<section id="userlist" class="b-section">\n    <a href="/users/new" id="addBtn" class="b-_link b-link--single b-link--smaller" title="Creates a new user profile">Add new one</a>\n    <table data-sortable id="userlistTable" class="b-table">\n        <thead>\n            <tr class="b-table__tr">\n                <th data-sorted-direction="ascending" data-type="number" class="b-table__th">Id</th>\n                <th class="b-table__th">Name</th>\n                <th class="b-table__th">Email</th>\n                <th class="b-table__th"></th>\n            </tr>\n        </thead>\n        <tbody>\n            {{#list}}\n            <tr class="b-table__tr">\n                <td class="b-table__td">{{id}}</td>\n                <td class="b-table__td"><a class="b-link" href="/users/{{id}}" title="{{name}}\'s profile">{{name}}</a></td>\n                <td class="b-table__td">{{email}}</td>\n                <td data-id="{{id}}}" class="b-table__td--cross">Ã—</td>\n            </tr>\n            {{/list}}\n        </tbody>\n        <tfoot></tfoot>\n    </table>\n</section>'}),define("controls/user/userListControl",["can","controls/defaultControl","text!templates/user/userlist.hbs","models/userModel","sortable"],function(e,t,n,r,o){return t.extend({model:r(),init:function(){var t=this,s=".b-table",i=".b-table__td--cross";e.view.mustache("userlistHbs",n),e.view("userlistHbs",t.model,function(e){t.element=t.element.append(e).find("#userlist"),t.table=t.element.find(s),t.table.on("click",i,$.proxy(t.onRemoveClick,t)),o.initTable(t.table.get(0))}),r.bind("created",$.proxy(t.fetch,this)),r.bind("destroyed",$.proxy(t.fetch,this)),r.bind("updated",$.proxy(t.fetch,this)),this.fetch()},onRemoveClick:function(e){return this.remove(e.target)},remove:function(e){var t=this,n=$(e),r=n.attr("data-id");return r?(n.parent().remove(),t.model.destroy(r)):r},fetch:function(){var e=this;return e.model.findAll().then(function(){e.table&&e.table.find("th[data-sorted-direction]").attr("data-sorted","").trigger("click")})}})}),define("app/modules/users",["controls/user/userControl","controls/user/userListControl"],function(){});